<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.halecms.infrastructure.sql.mysql.dao.CtmonAdminlogDao">
  <resultMap id="BaseResultMap" type="com.halecms.infrastructure.sql.mysql.entity.CtmonAdminlog">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="log_time" jdbcType="TIMESTAMP" property="logTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="log_info" jdbcType="VARCHAR" property="logInfo" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="log_type" jdbcType="INTEGER" property="logType" />
  </resultMap>
  <sql id="Base_Column_List">
    log_id, log_time, user_id, user_name, log_info, ip_address, log_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ctmon_adminlog
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ctmon_adminlog
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="log_id" keyProperty="logId" parameterType="com.halecms.infrastructure.sql.mysql.entity.CtmonAdminlog" useGeneratedKeys="true">
    insert into ctmon_adminlog (log_time, user_id, user_name, 
      log_info, ip_address, log_type
      )
    values (#{logTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{logInfo,jdbcType=VARCHAR}, #{ipAddress,jdbcType=VARCHAR}, #{logType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="log_id" keyProperty="logId" parameterType="com.halecms.infrastructure.sql.mysql.entity.CtmonAdminlog" useGeneratedKeys="true">
    insert into ctmon_adminlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logTime != null">
        log_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="logInfo != null">
        log_info,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
      <if test="logType != null">
        log_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logTime != null">
        #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="logInfo != null">
        #{logInfo,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.halecms.infrastructure.sql.mysql.entity.CtmonAdminlog">
    update ctmon_adminlog
    <set>
      <if test="logTime != null">
        log_time = #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="logInfo != null">
        log_info = #{logInfo,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=INTEGER},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.halecms.infrastructure.sql.mysql.entity.CtmonAdminlog">
    update ctmon_adminlog
    set log_time = #{logTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      log_info = #{logInfo,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=INTEGER}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>